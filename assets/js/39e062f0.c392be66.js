"use strict";(self.webpackChunkfiber_website=self.webpackChunkfiber_website||[]).push([[966],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var u=r.createContext({}),i=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=i(e.components);return r.createElement(u.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=i(n),h=s,b=d["".concat(u,".").concat(h)]||d[h]||p[h]||a;return n?r.createElement(b,o(o({ref:t},c),{},{components:n})):r.createElement(b,o({ref:t},c))}));function b(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=h;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[d]="string"==typeof e?e:s,o[1]=l;for(var i=2;i<a;i++)o[i]=n[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7919:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>i});var r=n(7462),s=(n(7294),n(3905));const a={sidebar_position:1,title:"Analytics"},o=void 0,l={unversionedId:"usage/analytics",id:"usage/analytics",title:"Analytics",description:"--------",source:"@site/docs/3-usage/analytics.md",sourceDirName:"3-usage",slug:"/usage/analytics",permalink:"/docs/usage/analytics",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/3-usage/analytics.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Analytics"},sidebar:"tutorialSidebar",previous:{title:"Integrations",permalink:"/docs/usage/integrations"},next:{title:"Use Cases",permalink:"/docs/use-cases"}},u={},i=[{value:"<code>echo_getBundleStats</code>",id:"echo_getbundlestats",level:2},{value:"Successful response",id:"successful-response",level:4},{value:"<code>echo_getInclusionStats</code>",id:"echo_getinclusionstats",level:2},{value:"Successful response",id:"successful-response-1",level:4}],c={toc:i},d="wrapper";function p(e){let{components:t,...n}=e;return(0,s.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("hr",null),(0,s.kt)("p",null,"Echo currently supports the following methods to query user analytics:"),(0,s.kt)("h2",{id:"echo_getbundlestats"},(0,s.kt)("inlineCode",{parentName:"h2"},"echo_getBundleStats")),(0,s.kt)("hr",null),(0,s.kt)("p",null,"This endpoint can be used to fetch information about a specific bundle sent to Echo."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "method": "echo_getBundleStats",\n  "params": [\n    {\n      bundleHash, // String, the bundle hash of the bundle you want to get stats for\n    }\n  ]\n}\n')),(0,s.kt)("h4",{id:"successful-response"},"Successful response"),(0,s.kt)("p",null,"Here is the successful response format that you can expect from the API:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "jsonrpc": "2.0",\n  "id": "1",\n  "result": {\n    [\n      {\n        bundleHash,  // String, the bundle hash of the bundle you requested stats for\n        included,    // Boolean, true if the bundle was included in a block, false otherwise\n        timestamp,   // Number, the timestamp (in milliseconds) when the bundle was included in a block\n        blockNumber, // Number, the block number in which the bundle was included\n        blockBuilder // String, the name of the builder that included the bundle\n      },\n      ...            // Additional bundles with the same bundleHash can be returned if they exist\n    ]\n  }\n}\n')),(0,s.kt)("h2",{id:"echo_getinclusionstats"},(0,s.kt)("inlineCode",{parentName:"h2"},"echo_getInclusionStats")),(0,s.kt)("hr",null),(0,s.kt)("p",null,"This endpoint can be used to fetch information about the inclusion details of the bundles you send through Echo."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "method": "echo_getInclusionStats",\n  "params": [\n    {} // Empty object\n  ]\n}\n')),(0,s.kt)("h4",{id:"successful-response-1"},"Successful response"),(0,s.kt)("p",null,"Here is the successful response format that you can expect from the API:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "jsonrpc": "2.0",\n  "id": "1",\n  "result": {\n    avgInclusionDelay,   // Number, the average delay (in milliseconds) between bundle submission and inclusion in a block\n    inclusionRate,       // Number, the ratio of bundles sent through Echo that were included in a block\n    bundlesIncludedByBuilder: [\n      {\n        blockBuilder,    // String, the name of the builder\n        bundlesIncluded, // Number, the number of bundles included by this builder\n      },\n      ...                // Each builder that included at least one of your bundles will be returned\n    ]\n  }\n}\n')))}p.isMDXComponent=!0}}]);