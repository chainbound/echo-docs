"use strict";(self.webpackChunkfiber_website=self.webpackChunkfiber_website||[]).push([[606],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),u=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),h=a,m=d["".concat(s,".").concat(h)]||d[h]||p[h]||r;return n?i.createElement(m,o(o({ref:t},c),{},{components:n})):i.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},4981:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var i=n(7462),a=(n(7294),n(3905));const r={sidebar_position:1,title:"API Interface"},o=void 0,l={unversionedId:"usage/api-interface",id:"usage/api-interface",title:"API Interface",description:"Endpoint",source:"@site/docs/3-usage/1-api-interface.md",sourceDirName:"3-usage",slug:"/usage/api-interface",permalink:"/docs/usage/api-interface",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/3-usage/1-api-interface.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"API Interface"},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/docs/architecture"},next:{title:"Integrations",permalink:"/docs/usage/integrations"}},s={},u=[{value:"Endpoint",id:"endpoint",level:2},{value:"Authentication",id:"authentication",level:2},{value:"<code>eth_sendBundle</code>",id:"eth_sendbundle",level:2},{value:"Successful response",id:"successful-response",level:3},{value:"Receipt Notification",id:"receipt-notification",level:3},{value:"<code>eth_cancelBundle</code>",id:"eth_cancelbundle",level:2},{value:"Successful response",id:"successful-response-1",level:3}],c={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"endpoint"},"Endpoint"),(0,a.kt)("hr",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The service supports the same API interface as the ",(0,a.kt)("a",{parentName:"li",href:"https://docs.flashbots.net/flashbots-auction/searchers/advanced/rpc-endpoint"},"Flashbots RPC"),",\nwith additional features which are defined below.  "),(0,a.kt)("li",{parentName:"ul"},"The Echo API entrypoint is ",(0,a.kt)("inlineCode",{parentName:"li"},"https://echo-staging-rpc.chainbound.io/"),". All requests to the API must be made over HTTPS.")),(0,a.kt)("h2",{id:"authentication"},"Authentication"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Echo uses the same authentication mechanism as Fiber. To use the API, you must specify a valid API key in the ",(0,a.kt)("inlineCode",{parentName:"p"},"x-api-key")," header\nof your request. You can obtain a free API key by reaching out to us at ",(0,a.kt)("a",{parentName:"p",href:"mailto:admin@chainbound.io"},"admin@chainbound.io")," or on ",(0,a.kt)("a",{parentName:"p",href:"https://discord.gg/J4KNdeCYGX"},"Discord"),"."),(0,a.kt)("p",null,"For a successful request, your header should be:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{"x-api-key": "echo-api-key"}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Echo is a drop-in replacement for any other builder API you already use via the following methods:")),(0,a.kt)("h2",{id:"eth_sendbundle"},(0,a.kt)("inlineCode",{parentName:"h2"},"eth_sendBundle")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Users can send budles and transactions via ",(0,a.kt)("inlineCode",{parentName:"p"},"eth_sendBundle")," method:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "method": "eth_sendBundle",\n  "params": [\n    {\n      txs,                   // Array[String], A list of signed transactions to execute in an atomic bundle\n      blockNumber,           // String, a hex encoded block number for which this bundle is valid on\n      minTimestamp,          // (Optional) Number, the minimum timestamp (in seconds) for which this bundle is valid\n      maxTimestamp,          // (Optional) Number, the maximum timestamp (in seconds) for which this bundle is valid\n      revertingTxHashes,     // (Optional) Array[String], A list of tx hashes that are allowed to revert\n      replacementUuid,       // (Optional) String, UUIDv4 that can be used to cancel/replace this bundle\n      mevBuilders,           // (Optional) Array[String], A list of mev builders to send this bundle to.\n                             //   If not specified, the bundle will be sent to all available builders\n      usePublicMempool,      // (Optional) Boolean, If true, the bundle will also be propagated to the public mempool\n                             //   through Fiber\'s internal network. Defaults to false.\n                             //   WARNING: Using this flag will void the privacy guarantees of the bundle, making it\n                             //   frontrunnable by anyone else, including other MEV searchers.\n      awaitReceipt,          // (Optional) Boolean, If true, the HTTP request will hang until the bundle is either\n                             //   included in a block, or the specified timeout is reached. Defaults to false.\n      awaitReceiptTimeoutMs, // (Optional) Number, The timeout (in milliseconds) for the awaitReceipt flag.\n                             //   Defaults to 30000 (30 seconds) if not specified and awaitReceipt is true.\n    }\n  ]\n}\n')),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"usePublicMempool")," flag will void the privacy guarantees of the bundle, making it frontrunnable by anyone else, including other MEV searchers. Use it only to send bundles that are not vulnerable to frontrunning.")),(0,a.kt)("h3",{id:"successful-response"},"Successful response"),(0,a.kt)("p",null,"Here is the successful response format that you can expect from the API:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "jsonrpc": "2.0",\n  "id": "123",\n  "result": {\n    bundleHash,          // String, a unique 256-bit bundle identifier, based its payload.\n    receiptNotification, // (Optional) object containing the on-chain receipt of the bundle.\n                         //   This field will only be present if you specified the `awaitReceipt` flag\n                         //   in the request.\n  }\n}\n')),(0,a.kt)("h3",{id:"receipt-notification"},"Receipt Notification"),(0,a.kt)("p",null,"If you set the ",(0,a.kt)("inlineCode",{parentName:"p"},"awaitReceipt")," flag to ",(0,a.kt)("strong",{parentName:"p"},"true")," in the request params,\nthe response will also include the ",(0,a.kt)("inlineCode",{parentName:"p"},"receiptNotification")," field, which will be one of the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'{\n  // ...,\n  "receiptNotification": {\n    status: "included" | "timedOut", // "included" if the bundle was included in a block, "timedOut" if the\n                                     // "awaitReceiptTimeoutMs" (default: 30s) was reached without inclusion.\n    data: {\n      blockNumber, // Number, the block number in which the bundle was included. Only present if status == "included"\n      elapsedMs    // Number, the time (in milliseconds) since the bundle was submitted. Always present.\n    }\n  }\n}\n')),(0,a.kt)("h2",{id:"eth_cancelbundle"},(0,a.kt)("inlineCode",{parentName:"h2"},"eth_cancelBundle")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Echo  allows users to cancel pending transactions by submitting a cancellation request via ",(0,a.kt)("inlineCode",{parentName:"p"},"eth_cancelBudnle")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "method": "eth_cancelBundle",\n  "params": [\n    {\n      replacementUuid, // UUIDv4 to uniquely identify submission\n      mevBuilders      // (Optional) Array[String], A list of mev builders to send the cancel request to.\n                       //   If not specified, the cancelBundle request will be sent only to the builders\n                       //   that were originally specified when the bundle was submitted with `eth_sendBundle`\n    }\n  ]\n}\n')),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"replacementUuid")," field must have been set when the bundle was submitted with ",(0,a.kt)("inlineCode",{parentName:"p"},"eth_sendBundle"),".")),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"You cannot specify a ",(0,a.kt)("inlineCode",{parentName:"p"},"replacementUuid")," together with the ",(0,a.kt)("inlineCode",{parentName:"p"},"usePublicMempool")," flag,\nas transactions sent to the public mempool can always be included.")),(0,a.kt)("h3",{id:"successful-response-1"},"Successful response"),(0,a.kt)("p",null,"WIP"))}p.isMDXComponent=!0}}]);